#!/bin/sh
### Start/Stop Dynatrace Collector daemon
#
# Copyright 2004-2016 Dynatrace Software
# All rights reserved.
#
# Copy this script to /etc/init.d and use chkconfig for enabling/disabling
# the daemon. In order to run multiple Collectors on the same host,
# further adjustments may be necessary. Depending on the target environment 
# adjustments may be necessary.
#
### BEGIN INIT INFO
# Provides: dynaTraceCollector
# Required-Start: $network
# Required-Stop: $network
# X-UnitedLinux-Should-Start:
# Default-Start: <%= @linux_service_start_runlevels %>
# Default-Stop: <%= @linux_service_stop_runlevels %>
# Description: Start/Stop Dynatrace Collector daemon
### END INIT INFO

# To use this file in your environment, adjusting the following variables:
# - DT_HOME       installation directory of Dynatrace software
# - DT_OPTARGS    optional arguments (e.g. -vm, -server, etc.)
# - DT_INSTANCE   instance name for the collector instance
# - DT_RUNASUSER  the user to run the Dynatrace process

DT_HOME=<%= @installer_prefix_dir %>/dynatrace
DT_OPTARGS="-listen <%= @agent_port %> -server <%= @server_hostname %>:<%= @server_port %><%= " -Xms#{@jvm_xms}" if @jvm_xms %><%= " -Xmx#{@jvm_xmx}" if @jvm_xmx %><%= " -XX:PermSize=#{@jvm_perm_size}" if @jvm_perm_size %><%= " -XX:MaxPermSize=#{@jvm_max_perm_size}" if @jvm_max_perm_size %>"

DT_INSTANCE=

DT_RUNASUSER=<%= @user %>

DT_PRODUCT=Collector
DT_BINARY=dtcollector

# How long to wait for shutdown
DT_SHUTDOWN_WAIT=60

OS_TYPE=`uname`

DT_PIDFILE_DIR=/tmp

DT_PIDFILE=${DT_PIDFILE_DIR}/${DT_BINARY}63.pid
if [ -n "${DT_INSTANCE}" ]; then
  DT_PIDFILE=${DT_PIDFILE_DIR}/${DT_BINARY}63_${DT_INSTANCE}.pid
fi
if [ ! -x "${DT_HOME}/${DT_BINARY}" ]; then
  echo "File not found or not executable: ${DT_HOME}/${DT_BINARY}"
  exit
fi
if [ -f "${DT_PIDFILE}" ]; then
  PROCESSPID=`cat ${DT_PIDFILE}`
fi

if [ -z "${PROCESSPID}" ]; then
  RPID=`ps -A -o pid,comm | grep ${DT_BINARY} | awk '{ printf "%s", $1 }'`
# RPID=`ps -C ${DT_BINARY} -o pid --no-headers | awk '{printf "%s|", $0}' | awk '{sub(/\|$/,""); printf $0}'`
  if [ ! -z "${RPID}" ]; then
    if [ -z "${DT_INSTANCE}" ]; then
      PROCESSPID=`ps -ef | grep -v "instance" | grep ${DT_BINARY} | awk '{{print $2}}' | grep ${RPID}`
    else
      PROCESSPID=`ps -ef | grep ${DT_BINARY} | grep " ${DT_INSTANCE} " | awk '{{print $2}}' | grep ${RPID}`
    fi
  fi
fi

case "$1" in
'start')
    if [ -z "${PROCESSPID}" ]; then
    if [ -z "${DT_INSTANCE}" ]; then
      if [ -z "${DT_RUNASUSER}" ]; then
        echo "${DT_HOME}"/${DT_BINARY} -bg ${DT_OPTARGS}
        "${DT_HOME}"/${DT_BINARY} -bg ${DT_OPTARGS}
        echo $! >${DT_PIDFILE}
      else
        echo "${DT_HOME}"/${DT_BINARY} -bg ${DT_OPTARGS}
        if [ "$OS_TYPE" = 'SunOS' ]; then
          su "${DT_RUNASUSER}" -c "${DT_HOME}/${DT_BINARY} -bg ${DT_OPTARGS}"
        else
          su -c "${DT_HOME}/${DT_BINARY} -bg ${DT_OPTARGS}" "${DT_RUNASUSER}"
        fi      
        echo $! >${DT_PIDFILE}
      fi  
    else
      if [ -z "${DT_RUNASUSER}" ]; then
        echo "${DT_HOME}"/${DT_BINARY} -instance "${DT_INSTANCE}" -bg ${DT_OPTARGS}
        "${DT_HOME}"/${DT_BINARY} -instance "${DT_INSTANCE}" -bg ${DT_OPTARGS}
        echo $! >${DT_PIDFILE}
      else        
        echo "${DT_HOME}"/${DT_BINARY} -instance "${DT_INSTANCE}" -bg ${DT_OPTARGS}
        if [ "$OS_TYPE" = 'SunOS' ]; then
          su "${DT_RUNASUSER}" -c "${DT_HOME}/${DT_BINARY} -instance ${DT_INSTANCE} -bg ${DT_OPTARGS}"
        else
          su -c "${DT_HOME}/${DT_BINARY} -instance ${DT_INSTANCE} -bg ${DT_OPTARGS}" "${DT_RUNASUSER}"
        fi    
        echo $! >${DT_PIDFILE}
      fi  
    fi
    else
    echo "Dynatrace ${DT_PRODUCT} daemon is already running!"
    exit 1
    fi
    ;;
'stop')
    if [ -n "${PROCESSPID}" ]; then
    echo "Terminating Dynatrace $DT_PRODUCT process ${PROCESSPID}"
    kill -15 ${PROCESSPID}
    COUNT=0
    while [ `ps -A -o pid | grep -c ${PROCESSPID}` -gt 0 ] && [ "${COUNT}" -lt "${DT_SHUTDOWN_WAIT}" ] # `ps --pid ${PROCESSPID} | grep -c ${PROCESSPID}` -ne 0]
    do
      echo "Waiting for Dynatrace ${DT_PRODUCT} (${PROCESSPID}) to finish shutdown";
      sleep 1
      COUNT=`expr ${COUNT} + 1`
    done
    if [ "${COUNT}" -gt "${DT_SHUTDOWN_WAIT}" ]; then
      echo "Killing Dynatrace ${DT_PRODUCT} (${PROCESSPID}) because the shutdown lasted longer than ${DT_SHUTDOWN_WAIT} seconds"
      kill -9 ${PROCESSPID}
    fi
    if [ -f "${DT_PIDFILE}" ]; then 
      rm -f ${DT_PIDFILE}
    fi
    fi
    ;;
'version')
    "${DT_HOME}"/${DT_BINARY} -v
    ;;
'status')
    if [ -n "${PROCESSPID}" ]; then
    echo "Dynatrace ${DT_PRODUCT} daemon is running:"
    ps -ef | grep ${DT_BINARY} | grep ${PROCESSPID}
        # | grep -v org.eclipse.equinox
    else
    echo "Dynatrace ${DT_PRODUCT} daemon not running."
    fi
    ;;
*)
    echo "usage: $0 {start|stop|status|version}"
    ;;
esac